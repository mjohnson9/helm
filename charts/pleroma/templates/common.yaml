{{/* Make sure all variables are set properly */}}
{{- include "common.values.setup" . }}

{{- define "pleroma.hardcoded-env" -}}
DB_HOST: {{ .Values.postgresql.host | default (printf "%s-postgresql" .Release.Name) }}
DB_PORT: {{ .Values.postgresql.port | default "5432" | quote }}
DB_NAME: {{ .Values.postgresql.auth.database }}
{{ if .Values.postgresql.auth.existingSecret.name | len -}}
DB_USER:
  valueFrom:
    secretKeyRef:
      name: {{ .Values.postgresql.auth.existingSecret.name }}
      key: {{ .Values.postgresql.auth.existingSecret.usernameKey }}
DB_PASS:
  valueFrom:
    secretKeyRef:
      name: {{ .Values.postgresql.auth.existingSecret.name }}
      key: {{ .Values.postgresql.auth.existingSecret.passwordKey }}
{{- else -}}
DB_USER: {{ .Values.postgresql.auth.username }}
DB_PASS: {{ .Values.postgresql.auth.password | quote }}
{{- end -}}
{{- end -}}
{{- $_ := set .Values "env" (merge  (include "pleroma.hardcoded-env" . | fromYaml) .Values.env) -}}

{{/* Append .Values.addConfig to the configmap */}}
{{- $_ := set .Values.configmap.config.data "config.exs" (printf "%s\n%s" (index .Values.configmap.config.data "config.exs") .Values.addConfig) -}}

{{/* Render the templates */}}
{{ include "common.all" . }}
